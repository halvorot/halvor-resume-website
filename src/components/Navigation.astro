---
import PrimaryButton from "./PrimaryButton.astro";
import { Icon } from "astro-icon";

import navData from "../data/navData";
---

<nav class="bg-dark absolute z-50 w-full bg-opacity-40">
  <div
    class="mx-auto flex max-w-screen-xl flex-wrap items-center justify-between p-4"
  >
    <div class="flex items-center">
      <Icon name="h-logo" class="mr-3 w-10" alt="Halvor Teigen Logo" />
      <span class="text-light hidden text-2xl font-semibold capitalize xs:block"
        >Halvor Teigen</span
      >
    </div>
    <div class="flex md:order-2">
      <PrimaryButton
        text="Download CV"
        href="/halvor-teigen-cv-english.pdf"
        ariaLabel="Download CV"
      />
      <button
        id="menu-btn"
        data-collapse-toggle="navbar-cta"
        type="button"
        class="text-light hover:bg-dark-accent/30 focus:ring-light-accent/10 inline-flex h-10 w-10 items-center justify-center rounded-lg p-2 text-sm focus:outline-none focus:ring-2 md:hidden"
        aria-controls="navbar-cta"
        aria-expanded="false"
      >
        <span class="sr-only">Open main menu</span>
        <svg
          class="h-5 w-5"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 17 14"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 1h15M1 7h15M1 13h15"></path>
        </svg>
      </button>
    </div>
    <div
      class="hidden w-full items-center justify-between md:order-1 md:flex md:w-auto"
      id="navbar-cta"
    >
      <ul
        class="bg-transparent mt-4 flex flex-col p-4 font-medium md:mt-0 md:flex-row md:space-x-8 md:p-0"
      >
        {
          navData.map((item) => (
            <li class="bg-transparent text-light hover:text-secondary block py-2 pl-3 pr-4 md:p-0">
              <a
                href={item.path}
                target={
                  item.name.toLowerCase() === "contact" ? "_blank" : "_self"
                }
                aria-current={item.name.toLowerCase() === "home" && "page"}
              >
                {item.name}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</nav>

<style>
  [aria-current="page"] {
    @apply text-primary;
  }
</style>

<script>
  const menuButton = document.getElementById("menu-btn");
  const navBarLinksDropdown = document.getElementById("navbar-cta");
  const navBar = document.querySelector("nav");
  // Toggle menu hidden when menu button clicked
  menuButton?.addEventListener("click", () => {
    navBarLinksDropdown?.classList.toggle("hidden");
    navBar?.classList.toggle("bg-opacity-40");
  });

  // Toggle menu hidden when menu button clicked
  const navLinks = document.querySelectorAll("nav a");
  navLinks.forEach((navLink) => {
    navLink.addEventListener("click", () => {
      const styles = menuButton && getComputedStyle(menuButton);
      if (styles?.display !== "none") {
        navBarLinksDropdown?.classList.toggle("hidden");
        navBar?.classList.toggle("bg-opacity-40");
      }
    });
  });

  // Hide menu if click outside menu/navbar
  document.documentElement.addEventListener("click", () => {
    if (!navBarLinksDropdown?.classList.contains("hidden")) {
      navBarLinksDropdown?.classList.add("hidden");
      navBar?.classList.add("bg-opacity-40");
    }
  });

  navBar?.addEventListener("click", (event) => {
    event.stopPropagation();
  });
</script>
